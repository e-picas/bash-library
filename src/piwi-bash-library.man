.\" author: Les Ateliers Pierrot

.TH  "Piwi Bash Library" "3" "2013-10-24" "Version 1.0.4" "piwi-bash-library.sh Manual"

.SH NAME

.PP
piwi-bash-library - The open source bash library of Les Ateliers Pierrot

.SH SYNOPSIS

.PP
\fBpiwi-bash-library-script [common options] [script options [=value]] [arguments] --\fP

.PP
\fBpiwi-bash-library-script\fP  [\fB-h\fP|\fB-V\fP]  [\fB-x\fP|\fB-v\fP|\fB-i\fP|\fB-q\fP|\fB-f\fP]
    [\fB-d\fP \fIpath\fP]  [\fB-l\fP \fIfilename\fP]
    [script options ...]  (--)  [arguments ...]

.SH DESCRIPTION

.PP
\fBBash\fP, the "\fIBourne-Again-SHell\fP", is a \fIUnix shell\fP written for the GNU Project as a
free software replacement for the original Bourne shell (sh). The present library is a tool
for Bash scripts facilities. To use the library, just include its source file using:
`\fSsource path/to/piwi-bash-library.sh\fP` and call its methods.

.PP
The library is NOT a script doing some work itself ; it is just a library. So running it
directly may not do anything. This manual explains the library itself, its options and
usage methods but you MAY keep in mind that the final manual page to read is the one of
the real script you will call, using the tools of the library to build its own work.

.PP
The following features are available using the library:

.RS

.IP \(bu 
some common methods to work with strings and arrays in Bash

.IP \(bu 
manage information messages like warnings and errors

.IP \(bu 
manage a simple \fBhelp or usage information\fP for each script (just defining some variables
in this script)

.IP \(bu 
create some \fBcolorized and styled content\fP for terminal output: some methods are designed
to wrap a string between colored or styled tags, according to the current system running,
and to build a colorized content using XML-like tags (`\fS<mytag>my content</mytag>\fP`)

.IP \(bu 
manage a \fBconfiguration dotfile\fP for a script: some methods allows you to read, write,
update and delete configuration values in a file

.IP \(bu 
manage \fBtemporary files\fP and \fBlog files\fP

.IP \(bu 
use a set of \fBcommon options\fP (described in next section) to let the user interact
with the script, such as increase or decrease verbosity, make a dry run, ask to force 
commands or to always prompt for confirmation

.RE

.PP
We mostly try to follow the <GNU coding standards>
to keep user in a known environment ...

.SH OPTIONS

.PP
Each script depending on the library may define its own options. Report to the script
manpage or help string for more infos.

.PP
\fIThe following common options are supported (MUST be used first):\fP
.TP
\fB-h\fP, \fB--help\fP
show this information message 
.TP
\fB-v\fP, \fB--verbose\fP
increase script verbosity ; this will define the environment variables `\fSVERBOSE\fP` on `\fStrue\fP`
and `\fSQUIET\fP` on `\fSfalse\fP`
.TP
\fB-q\fP, \fB--quiet\fP
decrease script verbosity, nothing will be written unless errors ; this will define
the environment variables `\fSVERBOSE\fP` and `\fSINTERACTIVE\fP` on `\fSfalse\fP` and `\fSQUIET\fP` on `\fStrue\fP`
.TP
\fB-f\fP, \fB--force\fP
force some commands to not prompt confirmation ; this will define the environment
variable `\fSFORCED\fP` on `\fStrue\fP`
.TP
\fB-i\fP, \fB--interactive\fP
ask for confirmation before any action ; this will define the environment variable
`\fSINTERACTIVE\fP` on `\fStrue\fP` and `\fSQUIET\fP` on `\fSfalse\fP`
.TP
\fB-x\fP, \fB--debug\fP, \fB--dry-run\fP
see commands to run but not run them actually ; this will define the environment variable
`\fSDEBUG\fP` on `\fStrue\fP`
.TP
\fB-V\fP, \fB--vers\fP, \fB--version\fP
see the script version when available ; use option `\fS-q\fP` to only have the version number
.TP
\fB-d\fP, \fB--working-dir\fP =path
redefine the working directory (default is `\fSpwd\fP` - `\fSpath\fP` must exist) ; this will update
the environment variable `\fSWORKINGDIR\fP`
.TP
\fB-l\fP, \fB--log\fP, \fB--logfile\fP =filename
define the log filename to use (default is `\fSpwibashlib.log\fP`) ; this will update
the environment variable `\fSLOGFILE\fP`
.TP
\fB--libvers\fP, \fB--libversion\fP
see the library version ; use options `\fS-q\fP` to only have the version number
.TP
\fB--libhelp\fP
see the library manpage
.TP
\fB--libdoc\fP, \fB--libdocumentation\fP
see the library documentation (use option `\fS-v\fP` to increase output)
.PP
You can group short options like `\fS-xc\fP`, set an option argument like `\fS-d(=)value\fP` or
`\fS--long=value\fP` and use `\fS--\fP` to explicitly specify the end of the script options.

.SH ENVIRONMENT

.PP
The following environment variables are available:
.TP
COLOR_LIGHT COLOR_DARK COLOR_INFO COLOR_NOTICE COLOR_WARNING COLOR_ERROR COLOR_COMMENT
a set of predefined colors
.TP
VERBOSE QUIET DEBUG INTERACTIVE FORCED
the library flags, activated by script common options (see previous section)
.TP
USEROS
the current user operating system
.TP
SYNOPSIS DESCRIPTION OPTIONS FILES ENVIRONMENT BUGS AUTHOR SEE_ALSO
these are used to build man-pages and usage infors ; they may be defined for each script
.SH EXIT STATUS

.PP
The library defines and uses some specific error status:
.TP
E_ERROR=\fB90\fP
classic error
.TP
E_OPTS=\fB81\fP
script options error
.TP
E_CMD=\fB82\fP
missing command error
.TP
E_PATH=\fB83\fP
path not found error
.SH FILES
.TP
\fBpiwi-bash-library.sh\fP
the standalone library source file 
.TP
\fBpwibashlib.log\fP
the default library log file
.SH LICENSE

.PP
The library is licensed under GPL-3.0 - Copyleft (c) Les Ateliers Pierrot
<http://www.ateliers-pierrot.fr/> - Some rights reserved. For documentation,
sources & updates, see <http://github.com/atelierspierrot/piwi-bash-library>. 
To read GPL-3.0 license conditions, see <http://www.gnu.org/licenses/gpl-3.0.html>.

.SH BUGS

.PP
To transmit bugs, see <http://github.com/atelierspierrot/piwi-bash-library/issues>.

.SH AUTHOR

.PP
\fBPiwi\fP <&#x70;&#x69;&#101;&#114;&#x6f;&#x2e;w&#98;&#109;&#x73;&#x74;&#114;&#64;&#x67;&#x6d;a&#105;&#108;&#x2e;&#x63;&#111;&#109;> for Les Ateliers Pierrot <http://www.ateliers-pierrot.fr/>.

.SH SEE ALSO

.PP
bash(1), sed(1), grep(1), printf(1), echo(1), tput(1), uname(1), getopts(1)

